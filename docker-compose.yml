version: '3.8'

services:
  myapp:
    build: .
    container_name: myapp
    networks:
      - app-network
    depends_on:
      postgres-db:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "wget --spider localhost:${APP_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - ${APP_PORT}:${APP_PORT}  
    # command: sleep 1000
  postgres-db:
    image: postgres
    container_name: ${PG_HOST}
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - 127.0.0.1:${PG_PORT}:${PG_PORT}
  migrations:
    build: ./migrate
    container_name: migrations
    profiles:
      - migrations
    networks:
      - app-network
    depends_on:
      postgres-db:
        condition: service_healthy
    env_file:
      - .env
networks:
  app-network:
    driver: bridge
volumes:
  db-data:
    driver: local
    driver_opts:
      type: none
      device: ${VOLUMES_DRIVER_LOCAL}
      o: bind
